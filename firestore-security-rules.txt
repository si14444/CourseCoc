// Firebase Firestore 보안 규칙 (firestore.rules)
// 이 규칙을 Firebase 콘솔 > Firestore Database > 규칙에 복사하여 적용하세요

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 인증된 사용자 함수
    function isAuthenticated() {
      return request.auth != null;
    }

    // 문서 소유자 확인 함수
    function isOwner(authorId) {
      return isAuthenticated() && request.auth.uid == authorId;
    }

    // 유효한 데이터인지 확인 함수
    function isValidCourseData() {
      return request.resource.data.keys().hasAll(['title', 'description', 'locations', 'content', 'isDraft', 'authorId']) &&
             request.resource.data.title is string &&
             request.resource.data.description is string &&
             request.resource.data.content is string &&
             request.resource.data.isDraft is bool &&
             request.resource.data.authorId is string &&
             request.resource.data.locations is list &&
             request.resource.data.locations.size() > 0;
    }

    // 코스 컬렉션 규칙
    match /courses/{courseId} {
      // 읽기: 모든 사용자 (발행된 코스) 또는 작성자 (모든 코스)
      allow read: if resource.data.isDraft == false ||
                     (isAuthenticated() && resource.data.authorId == request.auth.uid);

      // 생성: 인증된 사용자, 유효한 데이터, authorId가 현재 사용자와 일치
      allow create: if isAuthenticated() &&
                       isValidCourseData() &&
                       request.resource.data.authorId == request.auth.uid;

      // 업데이트: 작성자만, 유효한 데이터, authorId 변경 불가
      allow update: if isOwner(resource.data.authorId) &&
                       isValidCourseData() &&
                       request.resource.data.authorId == resource.data.authorId;

      // 삭제: 작성자만
      allow delete: if isOwner(resource.data.authorId);
    }

    // 사용자 프로필 컬렉션 규칙
    match /users/{userId} {
      // 읽기: 인증된 사용자 (모든 프로필 읽기 가능)
      allow read: if isAuthenticated();

      // 생성/업데이트: 본인 프로필만
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // 댓글 컬렉션 규칙
    match /comments/{commentId} {
      // 읽기: 인증된 사용자
      allow read: if isAuthenticated();

      // 생성: 인증된 사용자, authorId가 현재 사용자와 일치
      allow create: if isAuthenticated() &&
                       request.resource.data.authorId == request.auth.uid;

      // 업데이트: 댓글 작성자만
      allow update: if isAuthenticated() &&
                       resource.data.authorId == request.auth.uid;

      // 삭제: 댓글 작성자만
      allow delete: if isAuthenticated() &&
                       resource.data.authorId == request.auth.uid;
    }

    // 개발/테스트 환경을 위한 임시 규칙 (프로덕션에서는 제거하고 위의 규칙 사용)
    // 베타 테스트 중이라면 아래 규칙을 임시로 사용할 수 있습니다:
    // match /{document=**} {
    //   allow read, write: if request.auth != null;
    // }
  }
}